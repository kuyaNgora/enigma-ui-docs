import React, { useMemo, type SVGProps } from "react";

export const IconHandshake: React.FC<SVGProps<SVGSVGElement>> = ({
  className,
  ...props
}) => {
  const useGradient = useMemo(() => {
    if (typeof window === "undefined") return false;
    const el = document.createElement("div");
    el.className = className || "";
    document.body.appendChild(el);
    const styles = getComputedStyle(el);
    const hasVars =
      styles.getPropertyValue("--color1") &&
      styles.getPropertyValue("--color2");
    document.body.removeChild(el);
    return Boolean(hasVars);
  }, [className]);

  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...props}
    >
      <path
        d="M11.8749 20C11.9416 20 12.0082 19.9833 12.0749 19.95C12.1416 19.9167 12.1916 19.8833 12.2249 19.85L20.4249 11.65C20.6249 11.45 20.7709 11.225 20.8629 10.975C20.9549 10.725 21.0006 10.475 20.9999 10.225C20.9999 9.95833 20.9542 9.704 20.8629 9.462C20.7716 9.22 20.6256 9.00767 20.4249 8.825L16.1749 4.575C15.9916 4.375 15.7789 4.22933 15.5369 4.138C15.2949 4.04667 15.0412 4.00067 14.7759 4C14.5259 4 14.2759 4.046 14.0259 4.138C13.7759 4.23 13.5509 4.37567 13.3509 4.575L13.0759 4.85L14.9259 6.725C15.1759 6.95833 15.3592 7.225 15.4759 7.525C15.5926 7.825 15.6509 8.14167 15.6509 8.475C15.6509 9.175 15.4136 9.76267 14.9389 10.238C14.4642 10.7133 13.8766 10.9507 13.1759 10.95C12.8426 10.95 12.5219 10.8917 12.2139 10.775C11.9059 10.6583 11.6349 10.4833 11.4009 10.25L9.5249 8.4L5.14991 12.775C5.09991 12.825 5.06257 12.8793 5.03791 12.938C5.01324 12.9967 5.00057 13.059 4.99991 13.125C4.99991 13.2583 5.04991 13.3793 5.14991 13.488C5.24991 13.5967 5.36657 13.6507 5.49991 13.65C5.56657 13.65 5.63324 13.6333 5.6999 13.6C5.76657 13.5667 5.81657 13.5333 5.84991 13.5L8.54991 10.8C8.73324 10.6167 8.96257 10.5207 9.2379 10.512C9.51324 10.5033 9.75057 10.5993 9.9499 10.8C10.1332 10.9833 10.2249 11.2167 10.2249 11.5C10.2249 11.7833 10.1332 12.0167 9.9499 12.2L7.27491 14.9C7.22491 14.95 7.18757 15.0043 7.16291 15.063C7.13824 15.1217 7.12557 15.184 7.12491 15.25C7.12491 15.3833 7.17491 15.5 7.27491 15.6C7.37491 15.7 7.49157 15.75 7.62491 15.75C7.69157 15.75 7.75824 15.7333 7.8249 15.7C7.89157 15.6667 7.94157 15.6333 7.97491 15.6L10.6749 12.925C10.8582 12.7417 11.0876 12.6457 11.3629 12.637C11.6382 12.6283 11.8756 12.7243 12.0749 12.925C12.2582 13.1083 12.3499 13.3417 12.3499 13.625C12.3499 13.9083 12.2582 14.1417 12.0749 14.325L9.3999 17.025C9.3499 17.0583 9.31257 17.1083 9.2879 17.175C9.26324 17.2417 9.25057 17.3083 9.2499 17.375C9.2499 17.5083 9.2999 17.625 9.3999 17.725C9.4999 17.825 9.61657 17.875 9.7499 17.875C9.81657 17.875 9.87924 17.8623 9.9379 17.837C9.99657 17.8117 10.0506 17.7743 10.0999 17.725L12.7999 15.05C12.9832 14.8667 13.2126 14.7707 13.4879 14.762C13.7632 14.7533 14.0006 14.8493 14.1999 15.05C14.3832 15.2333 14.4749 15.4667 14.4749 15.75C14.4749 16.0333 14.3832 16.2667 14.1999 16.45L11.4999 19.15C11.4499 19.2 11.4126 19.2543 11.3879 19.313C11.3632 19.3717 11.3506 19.434 11.3499 19.5C11.3499 19.6333 11.4042 19.75 11.5129 19.85C11.6216 19.95 11.7422 20 11.8749 20ZM11.8499 22C11.2332 22 10.6876 21.796 10.2129 21.388C9.73824 20.98 9.4589 20.4673 9.3749 19.85C8.80824 19.7667 8.33324 19.5333 7.9499 19.15C7.56657 18.7667 7.33324 18.2917 7.24991 17.725C6.68324 17.6417 6.21257 17.4043 5.8379 17.013C5.46324 16.6217 5.23391 16.1507 5.14991 15.6C4.51657 15.5167 3.99991 15.2417 3.59991 14.775C3.1999 14.3083 2.99991 13.7583 2.99991 13.125C2.99991 12.7917 3.06257 12.471 3.18791 12.163C3.31324 11.855 3.49224 11.584 3.72491 11.35L8.09991 6.975C8.48324 6.59167 8.95424 6.4 9.5129 6.4C10.0716 6.4 10.5422 6.59167 10.9249 6.975L12.7999 8.85C12.8332 8.9 12.8832 8.93767 12.9499 8.963C13.0166 8.98833 13.0832 9.00067 13.1499 9C13.2999 9 13.4249 8.95433 13.5249 8.863C13.6249 8.77167 13.6749 8.65067 13.6749 8.5C13.6749 8.43333 13.6622 8.36667 13.6369 8.3C13.6116 8.23333 13.5742 8.18333 13.5249 8.15L9.9499 4.575C9.76657 4.375 9.55424 4.22933 9.3129 4.138C9.07157 4.04667 8.81724 4.00067 8.54991 4C8.29991 4 8.04991 4.046 7.79991 4.138C7.54991 4.23 7.3249 4.37567 7.12491 4.575L3.59991 8.125C3.36657 8.35833 3.1999 8.63333 3.09991 8.95C2.99991 9.26667 2.97491 9.58333 3.02491 9.9C3.07491 10.1833 3.01657 10.4333 2.84991 10.65C2.68324 10.8667 2.45824 10.9917 2.17491 11.025C1.89157 11.0583 1.64157 10.9957 1.42491 10.837C1.20824 10.6783 1.08324 10.4577 1.04991 10.175C0.949905 9.54167 0.995905 8.921 1.18791 8.313C1.37991 7.705 1.70891 7.16733 2.17491 6.7L5.6999 3.175C6.09991 2.79167 6.54591 2.5 7.03791 2.3C7.52991 2.1 8.03391 2 8.54991 2C9.06591 2 9.57024 2.1 10.0629 2.3C10.5556 2.5 10.9929 2.79167 11.3749 3.175L11.6499 3.45L11.9249 3.175C12.3249 2.79167 12.7709 2.5 13.2629 2.3C13.7549 2.1 14.2589 2 14.7749 2C15.2909 2 15.7952 2.1 16.2879 2.3C16.7806 2.5 17.2179 2.79167 17.5999 3.175L21.8249 7.4C22.2082 7.78333 22.4999 8.225 22.6999 8.725C22.8999 9.225 22.9999 9.73333 22.9999 10.25C22.9999 10.7667 22.8999 11.271 22.6999 11.763C22.4999 12.255 22.2082 12.6923 21.8249 13.075L13.6249 21.25C13.3916 21.4833 13.1209 21.6667 12.8129 21.8C12.5049 21.9333 12.1839 22 11.8499 22Z"
        fill={useGradient ? "url(#paint0_linear_217_418)" : "currentColor"}
      />
      {useGradient && (
        <defs>
          <linearGradient
            id="paint0_linear_217_418"
            x1="11.9992"
            y1="2"
            x2="11.9992"
            y2="22"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="var(--color1, currentColor)" />
            <stop offset="1" stopColor="var(--color2, currentColor)" />
          </linearGradient>
        </defs>
      )}
    </svg>
  );
};
